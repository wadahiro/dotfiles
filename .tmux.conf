#新しいウィンドウのベース番号
set-option -g base-index 1
#全てのベルを無視
set-option -g bell-action none
#各セッションで保持するバッファ数
set-option -g buffer-limit 20
#termiteで24bit colorを使用
#set-option -g default-terminal "xterm-termite"
set-option -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-termite:Tc"
set-option -g default-command /usr/bin/zsh
set-option -g default-shell /usr/bin/zsh

#powerline
run-shell "powerline-daemon -q"
source "/usr/lib/python3.5/site-packages/powerline/bindings/tmux/powerline.conf"

#ウィンドウ履歴で保持される最大行数
set-option -g history-limit 5000
#Escapeキー入力時の待ち時間(0.5秒)をキャンセル
set-option -g escape-time 0
#ウィンドウを実行コマンド名で自動リネーム
set-window-option -g automatic-rename on
#スクロールモード、コピーモード、選択モードで vi のキーバインドを使う
set-window-option -g mode-keys vi
#ウィンドウで動作があるとステータスラインでハイライト
set-window-option -g monitor-activity on
#UTF-8 シーケンスが現れることに備える
#set-window-option -g utf8 on
 
#set-option -g mouse-resize-pane on
#set-option -g mouse-select-pane on

# ウィンドウのインデックスを1から始める
set-option -g base-index 1

# ペインのインデックスを1から始める
setw -g pane-base-index 1

  
# prefix + r で設定ファイルを再読み込み
  set-option -g prefix C-g
  unbind r
  bind r source-file ~/.tmux.conf
   
# キーバインド
# 各種ペインの移動
   bind h select-pane -L
   bind j select-pane -D
   bind k select-pane -U
   bind l select-pane -R
# 各種ペインのリサイズ
   bind H resize-pane -L 5
   bind J resize-pane -D 5
   bind K resize-pane -U 5
   bind L resize-pane -R 5

#マウススクロールバック
#set-window-option -g mode-mouse on

#status line
set-option -g status on
set-option -g status-interval 5
set-option -g status-utf8 on
set-option -g status-justify "left"
set-option -g status-fg cyan
set-option -g status-bg colour235
set-option -g status-left-length 60 
set-option -g status-right-length 90 
set-option -g status-left '#[fg=white,bg=blue]#{?client_prefix,#[reverse],} #H#[fg=white,bg=black]:#[fg=white,bg=black][#S#[fg=white,bg=black]][#[fg=white,bg=black]'
set-option -g status-right '#[fg=white,bg=cyan][CPU=#(cpu.sh) MEM=#(mem.sh)]#[fg=black,bg=green][%Y/%m/%d(%a)%H:%M]#[default]'
# ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set-option -g visual-activity on


setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

# | でペインを縦に分割する
bind | split-window -h

# - でペインを横に分割する
bind - split-window -v

#マウスを有効
setw -g mouse on



# コピーモードを設定する
# viのキーバインドを使用する
#setw -g mode-keys vi
# クリップボード共有を有効にする
#set-option -g default-command "reattach-to-user-namespace -l zsh"
# コピーモードの操作をvi風に設定する
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
#unbind -t vi-copy Enter
bind-key v copy-mode \; display "Copy mode!"
#bind-key -t vi-copy v begin-selection
#unbind -t vi-copy Enter
#bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# copy to clipboard
## for Linux
if-shell "which xsel" '\
  bind-key -t vi-copy y copy-pipe "xsel -ib"; \
  bind-key -t vi-copy Enter copy-pipe "xsel -ib"; \
'

# コピーモード中（Prefix+v 後）C-v で矩形選択開始
bind-key -t vi-copy C-v rectangle-toggle
# 1行選択
bind-key -t vi-copy V select-line

set-option -g display-panes-time 10000

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"



# Maintain current directory
bind c new-window -c "#{pane_current_path}"
bind % split-window -hc "#{pane_current_path}"
bind '"' split-window -vc "#{pane_current_path}"

